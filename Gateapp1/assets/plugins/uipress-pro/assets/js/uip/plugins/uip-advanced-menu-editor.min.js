const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{returnData:Function,value:Array},data:function(){return{menu:this.uipData.adminMenu.menu,OGmenu:this.uipData.adminMenu.menu,selected:this.value,strings:{renameItem:__("Rename item","uipress-pro"),openMenuEditor:__("Open menu editor","uipress-pro"),itemName:__("Item name","uipress-pro"),separator:__("Separator","uipress-pro"),itemVisibility:__("Item visibiity","uipress-pro"),toggleSubmenu:__("Show submenu","uipress-pro"),addToMenu:__("Add to menu","uipress-pro"),newSeparator:__("New separator","uipress-pro"),newLink:__("New link","uipress-pro"),deleteItem:__("Delete item","uipress-pro"),advancedMenuEditor:__("Advanced menu editor","uipress-pro"),advanced:__("Advanced","uipress-pro"),customClasses:__("Custom classes","uipress-pro"),resetToDefault:__("Reset to default","uipress-pro"),openInNewTab:__("Open in a new tab?","uipress-pro"),withoutFrame:__("Open outside frame","uipress-pro"),withoutUiPress:__("Open without UiPress","uipress-pro")}}},inject:["uipData","uipress"],watch:{menu:{handler(e,n){void 0!==this.returnData&&this.returnData(this.menu)},deep:!0}},mounted:function(){this.setCustomMenu()},methods:{setCustomMenu(){void 0!==this.value&&Array.isArray(this.value)&&0!==this.value.length&&(this.menu=this.value)},returnIcon(e){return this.uipress.isObject(this.selected)&&Object.hasOwn(this.selected,e)?this.selected[e].icon:(this.selected[e]={},this.selected[e].icon={},this.selected[e].title="","")},returnTitle(e){return this.uipress.isObject(this.selected)&&Object.hasOwn(this.selected,e)?this.selected[e].title:(this.selected[e]={},this.selected[e].icon={},this.selected[e].title="","")},setdropAreaStyles(){let e=[];return e.class="uip-flex uip-flex-column uip-row-gap-xs",e},newMenuItem(e,n,i){let t={name:__("Custom menu item","uipress-pro"),icon:"favorite",url:"",submenu:[],uid:this.uipress.createUID(),custom:!0};"sep"==e&&(t.type="sep",t.name=""),i?Array.isArray(n.submenu)&&void 0!==n.submenu||(n.submenu=[t]):n.push(t)},deleteItem(e,n,i){e.custom&&i.splice(n,1)},returnFormattedIcon:e=>void 0!==e&&e?e.includes("uipblank")?e.replace("uipblank",""):e:""},template:'\n    \n    <uip-offcanvas style=\'width:auto;\'>\n      \n      <template v-slot:trigger>\n        <button class="uip-button-default uip-flex uip-flex-row uip-gap-xxs">\n          <span class="uip-icon">edit_note</span>\n          <span>{{strings.openMenuEditor}}</span>\n        </button>\n      </template>\n      \n      <template v-slot:content>\n          \n          <div class="">\n          \n            <div class="uip-text-bold uip-text-l uip-margin-bottom-m uip-flex uip-flex-row uip-gap-xs uip-flex-center">\n              <span class="uip-icon uip-text-l">edit_note</span>\n              <span>{{strings.advancedMenuEditor}}</span>\n            </div>\n          \n            <draggable \n            v-model="menu" \n            :group="{ name: \'menuItems\', pull: true, put: true }"\n            :component-data="setdropAreaStyles()"\n            @start="drag=true"\n            @end="drag=false"\n            handle=".uip-drag-handle"\n            :sort="true"\n            animation="300"\n            itemKey="uid">\n              <template #item="{element: parent, index}">\n              \n                <div>\n                  \x3c!-- top level items--\x3e\n                  <div class="uip-flex uip-flex-row uip-gap-s uip-flex-center  uip-background-muted uip-border-round uip-padding-xs uip-w-400">\n                    \n                    <div class="uip-icon uip-drag-handle uip-cursor-drag uip-padding-xxxs uip-border-round uip-background-grey">drag_indicator</div>\n                    \n                    <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-grow" :class="{\'uip-opacity-20\' : parent.hidden}" >\n                    \n                      <inline-icon-select :value="{value: parent.icon}" :returnData="function(e){parent.icon = e.value}">\n                        <template v-slot:trigger>\n                          <div class="uip-padding-xxxs uip-w-14 uip-ratio-1-1 uip-border uip-border-round">\n                            <div class="uip-icon" v-html="returnFormattedIcon(parent.icon)"></div>\n                          </div>\n                        </template>\n                      </inline-icon-select>\n                      <div class=" uip-flex uip-flex-row uip-gap-xxxs">\n                        <input class="uip-blank-input" type="text" v-model="parent.name" :placeholder="strings.itemName">\n                        <div v-if="parent.type == \'sep\'" class="uip-text-s uip-padding-xxxs uip-border-round uip-background-orange-wash">{{strings.separator}}</div>\n                      </div>\n                      \n                    </div>\n                    \n                    \x3c!--Item options --\x3e\n                    <div class="uip-flex uip-flex-row uip-gap-xxs">\n                      <drop-down v-if="parent.type != \'sep\'" dropPos="left">\n                        <template v-slot:trigger>\n                          <div class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l">link</div>\n                        </template>\n                        <template v-slot:content>\n                          <div class="uip-padding-xxs">\n                            <input class="uip-input uip-input-small" type="text" v-model="parent.url">\n                          </div>\n                        </template>\n                      </drop-down>\n                      \n                      <uip-tooltip :message="strings.itemVisibility">\n                        <div @click="parent.hidden = !parent.hidden" class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l uip-cursor-pointer"\n                        :class="{\'uip-text-danger\' : parent.hidden}" >visibility</div>\n                      </uip-tooltip>\n                      \n                     \n                      <drop-down dropPos="left">\n                        <template v-slot:trigger>\n                          <uip-tooltip :message="strings.advanced">\n                            <div class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l">code</div>\n                          </uip-tooltip>\n                        </template>\n                        <template v-slot:content>\n                          <div class="uip-flex uip-flex-column uip-border-bottom">\n                            <div class="uip-padding-xs">\n                              <div class="uip-text-s uip-text-muted uip-margin-bottom-xxs">{{strings.customClasses}}</div>\n                              <input class="uip-input uip-input-small" type="text" v-model="parent.customClasses">\n                            </div>\n                          </div>\n                          <div class="uip-flex uip-flex-column uip-row-gap-xs uip-padding-xs">\n                          \n                            <label class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center uip-flex-between">\n                              <div class="uip-text-s uip-text-muted">{{strings.openInNewTab}}</div>\n                              <input class="uip-checkbox" type="checkbox" v-model="parent.newTab">\n                            </label>\n                            \n                            <label class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center uip-flex-between">\n                              <div class="uip-text-s uip-text-muted">{{strings.withoutFrame}}</div>\n                              <input class="uip-checkbox" type="checkbox" v-model="parent.withoutFrame">\n                            </label>\n                            \n                            <label class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center uip-flex-between">\n                              <div class="uip-text-s uip-text-muted">{{strings.withoutUiPress}}</div>\n                              <input class="uip-checkbox" type="checkbox" v-model="parent.withoutUiPress">\n                            </label>\n                            \n                          </div>\n                        </template>\n                      </drop-down>\n                      \n                      <div v-if="parent.type != \'sep\'" class="uip-border-left uip-margin-left-xxs uip-margin-right-xxs"></div>\n                      \n                      \n                      <uip-tooltip v-if="parent.type != \'sep\'" :message="strings.toggleSubmenu">\n                        <div  v-if="!parent.subOpen" @click="parent.subOpen = !parent.subOpen" class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l uip-cursor-pointer">chevron_left</div>\n                        <div v-else @click="parent.subOpen = !parent.subOpen" class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l uip-cursor-pointer">expand_more</div>\n                      </uip-tooltip>\n                      \n                      <uip-tooltip v-if="parent.custom" :message="strings.deleteItem">\n                        <div  @click="deleteItem(parent, index, menu)" class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l uip-cursor-pointer uip-link-danger">delete</div>\n                      </uip-tooltip>\n                    </div>\n                    \x3c!--End item options --\x3e\n                    \n                  </div>\n                  \x3c!--End top level items--\x3e\n                  \n                  \n                  \n                  \n                  \n                  \n                  \x3c!-- SUB LEVEL ITEMS --\x3e\n                  <div class="uip-margin-left-m uip-margin-top-s uip-margin-bottom-m uip-scale-in" v-if="parent.type != \'sep\' && parent.subOpen">\n                    \n                    <draggable \n                    v-model="parent.submenu" \n                    :group="{ name: \'menuItems\', pull: true, put: true }"\n                    :component-data="setdropAreaStyles()"\n                    @start="drag=true"\n                    @end="drag=false"\n                    handle=".uip-drag-handle"\n                    :sort="true"\n                    animation="300"\n                    itemKey="uid">\n                    \n                      <template #item="{element: subitem, index}">\n                        \n                        \n                          <div class="uip-flex uip-flex-row uip-gap-s uip-flex-center hover:uip-background-muted uip-border-round uip-padding-xxs">\n                            \n                            <div class="uip-icon uip-drag-handle uip-cursor-drag uip-padding-xxxs uip-border-round uip-background-grey">drag_indicator</div>\n                            \n                            <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-grow" :class="{\'uip-opacity-20\' : subitem.hidden}" >\n                            \n                              <div class=" uip-flex uip-flex-row uip-gap-xxxs">\n                                <input class="uip-blank-input" type="text" v-model="subitem.name" :placeholder="strings.itemName">\n                                <div v-if="subitem.type == \'sep\'" class="uip-text-s uip-padding-xxxs uip-border-round uip-background-orange-wash">{{strings.separator}}</div>\n                              </div>\n                              \n                            </div>\n                            \n                            \x3c!--Item options --\x3e\n                            <div class="uip-flex uip-flex-row uip-gap-xxs">\n                              <drop-down v-if="subitem.type != \'sep\'" dropPos="left">\n                                <template v-slot:trigger>\n                                  <div class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l">link</div>\n                                </template>\n                                <template v-slot:content>\n                                  <div class="uip-padding-xxs">\n                                    <input class="uip-input uip-input-small" type="text" v-model="subitem.url">\n                                  </div>\n                                </template>\n                              </drop-down>\n                              \n                              <uip-tooltip :message="strings.itemVisibility">\n                                <div @click="subitem.hidden = !subitem.hidden" class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l uip-cursor-pointer"\n                                :class="{\'uip-text-danger\' : subitem.hidden}" >visibility</div>\n                              </uip-tooltip>\n                              \n                              \n                              \n                              <drop-down dropPos="left">\n                                <template v-slot:trigger>\n                                  <uip-tooltip :message="strings.advanced">\n                                    <div class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l">code</div>\n                                  </uip-tooltip>\n                                </template>\n                                <template v-slot:content>\n                                  <div class="uip-flex uip-flex-column uip-border-bottom">\n                                    <div class="uip-padding-xs">\n                                      <div class="uip-text-s uip-text-muted uip-margin-bottom-xxs">{{strings.customClasses}}</div>\n                                      <input class="uip-input uip-input-small" type="text" v-model="subitem.customClasses">\n                                    </div>\n                                  </div>\n                                  <div class="uip-flex uip-flex-column uip-row-gap-xs uip-padding-xs">\n                                  \n                                    <label class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center uip-flex-between">\n                                      <div class="uip-text-s uip-text-muted">{{strings.openInNewTab}}</div>\n                                      <input class="uip-checkbox" type="checkbox" v-model="subitem.newTab">\n                                    </label>\n                                    \n                                    <label class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center uip-flex-between">\n                                      <div class="uip-text-s uip-text-muted">{{strings.withoutFrame}}</div>\n                                      <input class="uip-checkbox" type="checkbox" v-model="subitem.withoutFrame">\n                                    </label>\n                                    \n                                    <label class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center uip-flex-between">\n                                      <div class="uip-text-s uip-text-muted">{{strings.withoutUiPress}}</div>\n                                      <input class="uip-checkbox" type="checkbox" v-model="subitem.withoutUiPress">\n                                    </label>\n                                    \n                                  </div>\n                                </template>\n                              </drop-down>\n                              \n                              \n                              \n                              <uip-tooltip v-if="subitem.custom" :message="strings.deleteItem">\n                                <div  @click="deleteItem(subitem, index, parent.submenu)" class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l uip-cursor-pointer uip-link-danger">delete</div>\n                              </uip-tooltip>\n                            </div>\n                            \x3c!--End item options --\x3e\n                            \n                          </div>\n                        \n                      </template>\n                      \n                      <template #footer >                        \n                        <div class="uip-flex uip-flex-right">\n                          <drop-down dropPos="bottom-left">\n                            \n                            <template v-slot:trigger>\n                              <button class="uip-button-default uip-flex uip-flex-row uip-gap-xxs">\n                                <span class="uip-icon">add</span>\n                                <span>{{strings.addToMenu}}</span>\n                              </button>\n                            </template>\n                            \n                            <template v-slot:content>\n                              <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs">\n                                <div class="uip-link-muted uip-flex uip-gap-xs uip-flex-center"  @click="newMenuItem(\'sep\', parent, true)">\n                                  <span class="uip-icon">title</span>\n                                  <span>{{strings.newSeparator}}</span>\n                                </div>\n                                <div class="uip-link-muted uip-flex uip-gap-xs uip-flex-center" @click="newMenuItem(\'link\', parent, true)">\n                                  <span class="uip-icon">link</span>\n                                  <span>{{strings.newLink}}</span>\n                                </div>\n                              </div>\n                            </template>\n                            \n                          </drop-down>\n                        </div>\n                        \n                      </template>\n                      \n                    </draggable>\n                    \n                  </div>\n                  \x3c!-- END SUB LEVEL ITEMS --\x3e\n                  \n                  \n                  \n                  \n                  \n                  \n                \n                </div>\n                \n              </template>\n              \n              <template #header >                \n                <div class="uip-flex uip-flex-right">\n                  <drop-down dropPos="bottom-left">\n                    \n                    <template v-slot:trigger>\n                      <button class="uip-button-default uip-flex uip-flex-row uip-gap-xxs">\n                        <span class="uip-icon">add</span>\n                        <span>{{strings.addToMenu}}</span>\n                      </button>\n                    </template>\n                    \n                    <template v-slot:content>\n                      <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs">\n                        <div class="uip-link-muted uip-flex uip-gap-xs uip-flex-center" @click="newMenuItem(\'sep\', menu)">\n                          <span class="uip-icon">title</span>\n                          <span>{{strings.newSeparator}}</span>\n                        </div>\n                        <div class="uip-link-muted uip-flex uip-gap-xs uip-flex-center" @click="newMenuItem(\'link\', menu)">\n                          <span class="uip-icon">link</span>\n                          <span>{{strings.newLink}}</span>\n                        </div>\n                      </div>\n                    </template>\n                    \n                  </drop-down>\n                </div>\n                \n              </template>\n              \n              <template #footer >                \n                <div class="uip-flex uip-flex-right">\n                  <drop-down dropPos="bottom-left">\n                    \n                    <template v-slot:trigger>\n                      <button class="uip-button-default uip-flex uip-flex-row uip-gap-xxs">\n                        <span class="uip-icon">add</span>\n                        <span>{{strings.addToMenu}}</span>\n                      </button>\n                    </template>\n                    \n                    <template v-slot:content>\n                      <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs">\n                        <div class="uip-link-muted uip-flex uip-gap-xs uip-flex-center" @click="newMenuItem(\'sep\', menu)">\n                          <span class="uip-icon">title</span>\n                          <span>{{strings.newSeparator}}</span>\n                        </div>\n                        <div class="uip-link-muted uip-flex uip-gap-xs uip-flex-center" @click="newMenuItem(\'link\', menu)">\n                          <span class="uip-icon">link</span>\n                          <span>{{strings.newLink}}</span>\n                        </div>\n                      </div>\n                    </template>\n                    \n                  </drop-down>\n                </div>\n                \n              </template>\n              \n              \n              \n            </draggable>\n            \n            <button class="uip-button-danger uip-margin-top-m uip-flex uip-flex-row uip-gap-xs uip-flex-center" @click="menu = OGmenu">\n              <span class="uip-icon uip-text-l">delete</span>\n              <span>{{strings.resetToDefault}}</span>\n            </button>\n          \n          </div>\n          \n      </template> \n      \n    </uip-offcanvas>'}};