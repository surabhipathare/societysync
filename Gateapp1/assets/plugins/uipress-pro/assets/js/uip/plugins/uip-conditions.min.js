export function moduleData(){return{props:{returnData:Function,value:Array,placeHolder:String,args:Object,size:String},data:function(){return{option:this.value,strings:{newCondition:__("New condition","uipress-pro"),conditionExplanation:__("Conditions allow you to control who sees this block. If all conditions are not met then this block will not be loaded for the user.","uipress-pro"),type:__("Type","uipress-pro"),operators:__("Operator","uipress-pro"),searchUsers:__("Search","uipress-pro")},conditions:{types:[{value:"userrole",label:__("User role","uipress-pro")},{value:"userlogin",label:__("User login","uipress-pro")},{value:"userid",label:__("User ID","uipress-pro")},{value:"useremail",label:__("User email","uipress-pro")}],operators:[{value:"is",label:__("Is","uipress-pro")},{value:"isnot",label:__("Is not","uipress-pro")}]}}},mounted:function(){this.processValue()},watch:{option:{handler(t,e){this.returnData(this.option)},deep:!0}},methods:{processValue(){void 0===this.option&&(this.option=[]),Array.isArray(this.option)||(this.option=[])},newCondition(){this.option.push({type:!1,operator:!1,value:""})},removeCondition(t){this.option.splice(t,1)}},template:'\n\t\n\t<div class="uip-flex uip-w-100p uip-flex-column uip-row-gap-xs">\n\t\n\t  <div class="uip-text-s uip-text-muted uip-margin-bottom-xs">{{strings.conditionExplanation}}</div>\n\t\n\t  <div class="uip-flex uip-flex-column uip-row-gap-xs">\n\t\t<template v-for="(element, index) in option">\n\t\t  <div class="uip-flex uip-flex-row uip-gap-xxs">\n\t\t\t\n\t\t\t<select class="uip-input-small uip-max-w-100p" v-model="element.type">\n\t\t\t  <option disabled>{{strings.type}}</option>\n\t\t\t  <template v-for="item in conditions.types">\n\t\t\t\t<option :value="item.value">{{item.label}}</option>\n\t\t\t  </template>\n\t\t\t</select>\n\t\t\t\n\t\t\t<select class="uip-input-small uip-max-w-100p" v-model="element.operator">\n\t\t\t  <template v-for="item in conditions.operators">\n\t\t\t\t<option :value="item.value">{{item.label}}</option>\n\t\t\t  </template>\n\t\t\t</select>\n\t\t\t\n\t\t\t<input type="text" class="uip-input-small" style="min-width:1px" v-model="element.value">\n\t\t\t\n\t\t\t<user-role-search :selected="[]" :returnType="element.type" :searchPlaceHolder="strings.searchUsers" :updateSelected="function(d){element.value = d}"></user-role-search>\n\t\t\t\n\t\t\t<div class="uip-border-round uip-border-left-square uip-border-left-remove uip-text-l uip-flex uip-icon uip-padding-xxxs uip-text-center uip-cursor-pointer uip-icon uip-link-danger uip-flex-center" @click="removeCondition(index)">delete</div>\n\t\t\t\n\t\t\t\n\t\t  </div>\n\t\t  \n\t\t</template>\n\t  </div>\n\t  \n\t  \x3c!--New condition--\x3e\n\t  \n\t  <div class="uip-padding-xxs uip-border-round uip-background-muted hover:uip-background-grey uip-cursor-pointer uip-flex uip-flex-middle uip-flex-center uip-gap-xs uip-flex-grow" @click="newCondition">\n\t\t<span class="uip-icon">add</span>\n\t\t<span>{{strings.newCondition}}</span>\n\t  </div>\n\t  \n\t</div>'}};