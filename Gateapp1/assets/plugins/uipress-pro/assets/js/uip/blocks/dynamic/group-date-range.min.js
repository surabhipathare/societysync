const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{display:String,name:String,block:Object,contextualData:Object},data:function(){return{loading:!0,range:!1,picker:!1,contextData:this.contextualData,dateRange:"",date:{single:"",dateRange:{start:"",end:""},dateRangeComparison:{start:"",end:""}},strings:{placeholder:__("Input placeholder...","uipress-pro")}}},watch:{range:{handler(t,e){let a=this;a.picker&&(a.picker.destroy(),a.mountPicker())}},dateRange:{handler(t,e){console.log(t)},deep:!0}},inject:["uipData","uipress","uiTemplate"],mounted:function(){this.mountPicker()},computed:{returnContextData(){return void 0===this.contextData?(this.contextData={},this.contextData.groupDate={},this.contextData):this.uipress.isObject(this.contextData)?"formData"in this.contextData?this.contextData:(this.contextData.groupDate={},this.contextData):(this.contextData={},this.contextData.groupDate={},this.contextData)},returnPlaceHolder(){let t=this.uipress.get_block_option(this.block,"block","inputPlaceHolder",!0);return t?this.uipress.isObject(t)?"string"in t?t.string:"":t:""},returnPopulated(){if(void 0!==this.contextualData&&this.uipress.isObject(this.contextualData)&&"formData"in this.contextualData)return this.contextualData.formData&&this.returnName in this.contextualData.formData?this.contextualData.formData[this.returnName]:""},returnLabel(){let t=this.uipress.get_block_option(this.block,"block","inputLabel",!0);return t?this.uipress.isObject(t)?"string"in t?t.string:"":t:""},returnRequired(){return this.uipress.get_block_option(this.block,"block","inputRequired")},returnName(){return this.uipress.get_block_option(this.block,"block","inputName")},returnDateRange(){return this.range=this.uipress.get_block_option(this.block,"block","dateRange",!0),this.range},returnPickerArgs(){let t=this;this.returnDateRange;return{element:this.$refs.datepicker,css:[uipProPath+"assets/css/libs/uip-datepicker.css"],lang:t.uipress.uipAppData.options.locale,plugins:["RangePlugin","PresetPlugin","LockPlugin"],grid:2,calendars:2,LockPlugin:{maxDate:new Date},zIndex:99,RangePlugin:{tooltip:!0},setup(e){e.on("select",a=>{let i=e.getStartDate(),n=e.getEndDate();t.setGroupDates(i,n)})}}},returnClasses(){let t="";return t+=this.uipress.get_block_option(this.block,"advanced","classes")}},methods:{setGroupDates(t,e){this.contextData.groupDate.start=t,this.contextData.groupDate.end=e},mountPicker(){this.picker=new easepick.create(this.returnPickerArgs)}},template:'      <div class="">        <div class="uip-flex uip-flex-column uip-inline-flex" :class="returnClasses" :id="block.uid" >          <div class="uip-background-muted uip-border-round uip-overflow-hidden uip-padding-xxs uip-flex uip-gap-xs uip-flex-center uip-date-input">            <div class="uip-icon uip-text-l">calendar_month</div>            <input ref="datepicker" :value="dateRange" :name="returnName" :range="returnDateRange"            class="uip-blank-input uip-text-s" type="text" :placeholder="returnPlaceHolder" :required="returnRequired">          </div>        </div>        <div class="uip-date-group-area">          <uip-content-area :contextualData="returnContextData"          :content="block.content" :returnData="function(data) {block.content = data} " layout="vertical" ></uip-content-area>        </div>      </div>'}};