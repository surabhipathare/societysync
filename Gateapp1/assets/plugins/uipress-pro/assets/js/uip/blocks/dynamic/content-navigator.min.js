const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import"../../../libs/sortable.js";import"../../../libs/vue-draggable.js";export function moduleData(){return{components:{"uip-draggable":vuedraggable,"content-folder":contentFolder,"new-folder":newFolder},props:{display:String,name:String,block:Object},data:function(){return{loading:!1,defaults:[],currentID:!1,baseFolders:[],limitToauthor:this.uipress.get_block_option(this.block,"block","limitToAuthor"),strings:{placeholder:__("Input placeholder...","uipress-pro"),new:__("New","uipress-pro"),loadMore:__("Load more","uipress-pro"),search:__("Search","uipress-pro"),view:__("View","uipress-pro"),edit:__("Edit","uipress-pro"),duplicate:__("Duplicate","uipress-pro"),delete:__("Delete","uipress-pro"),folders:__("Folders","uipress-pro"),newFolder:__("New folder","uipress-pro"),folderName:__("Folder name","uipress-pro"),folderColor:__("Folder colour","uipress-pro"),create:__("Create","uipress-pro")}}},provide(){return{limitToauthor:this.limitToauthor,currentID:this.currentID,defaultLinkType:this.getDefaultLinkType,postTypes:this.getPostTypes}},watch:{},inject:["uipData","uipress","uiTemplate"],mounted:function(){this.getDefaults()},computed:{getDefaultLinkType(){let e=this.uipress.get_block_option(this.block,"block","defaultLink");return e?"value"in e?e.value:e:"editPost"},getPostTypes(){return this.uipress.get_block_option(this.block,"block","searchPostTypes")},returnCurrentID(){return JSON.stringify(this.currentID)}},methods:{getDefaults(){let e=this;if(e.loading)return;e.loading=!0;let i=[];void 0!==e.getPostTypes&&Array.isArray(e.getPostTypes)&&(i=e.getPostTypes),i=JSON.stringify(i);let t=e.uipress.get_block_option(this.block,"block","limitToAuthor"),n=new FormData;n.append("action","uip_get_navigator_defaults"),n.append("security",uip_ajax.security),n.append("limitToauthor",t),n.append("postTypes",i),e.uipress.callServer(uip_ajax.ajax_url,n).then(i=>{e.loading=!1,i.error&&e.uipress.notify(i.message,"","error",!0),i.success&&(e.baseFolders=i.baseFolders,e.defaults=i.postTypes)})},getDefaultContent(e,i){if(!e.open)return;"page"in e||(e.page=1),i&&(e.loading=!0);let t=this,n=t.uipress.get_block_option(this.block,"block","limitToAuthor"),p=new FormData;p.append("action","uip_get_default_content"),p.append("security",uip_ajax.security),p.append("limitToauthor",n),p.append("postType",e.type),p.append("page",e.page),p.append("search",e.search),t.uipress.callServer(uip_ajax.ajax_url,p).then(i=>{e.loading=!1,i.error&&t.uipress.notify(i.message,"","error",!0),i.success&&(e.totalFound=i.totalFound,e.page>1?e.content=e.content.concat(i.content):e.content=i.content)})},updateItemFolder(e){let i=this,t=new FormData;t.append("action","uip_update_item_folder"),t.append("security",uip_ajax.security),t.append("item",JSON.stringify(e)),t.append("newParent","uipfalse"),i.uipress.callServer(uip_ajax.ajax_url,t).then(t=>{t.error&&i.uipress.notify(t.message,"","error",!0),t.success&&(e.parent="uipfalse")})},duplicateItem(e,i,t){let n=this,p=new FormData;p.append("action","uip_duplicate_post"),p.append("security",uip_ajax.security),p.append("postID",e.id),n.uipress.callServer(uip_ajax.ajax_url,p).then(p=>{if(p.error&&n.uipress.notify(p.message,"","error",!0),p.success){n.uipress.notify(__("Item duplicated","uipress-pro"),"","sucess",!0);let r=JSON.parse(JSON.stringify(e));r.id=p.newID,r.title=p.newTitle,r.status="draft",t.splice(i,0,r)}})},deleteItem(e,i,t){let n=this,p=new FormData;p.append("action","uip_delete_post_from_folder"),p.append("security",uip_ajax.security),p.append("postID",e.id),n.uipress.callServer(uip_ajax.ajax_url,p).then(e=>{console.log(e),e.error&&n.uipress.notify(e.message,"","error",!0),e.success&&(n.uipress.notify(__("Item deleted","uipress-pro"),"","sucess",!0),t.content.splice(i,1),t.totalFound-=1)})},itemAdded(e){let i=this;if(e.added){if("uip-ui-folder"!==e.added.element.type&&(this.baseFolders.splice(e.added.newIndex,1),this.uipress.notify(__("Item removed from folder","uipress-pro"),"","error")),this.baseFolders.filter(i=>i.id===e.added.element.id).length>1)return void this.baseFolders.splice(e.added.newIndex,1);this.baseFolders.sort(function(e,i){let t=e.title.toUpperCase(),n=i.title.toUpperCase();return t<n?-1:t>n?1:0}),i.updateItemFolder(e.added.element)}},returnClasses(){let e="";return e+=this.uipress.get_block_option(this.block,"advanced","classes")},updatePage(e){this.currentID=e.id,"editPost"==this.getDefaultLinkType?this.uipress.updatePage(e.edit_href):this.uipress.updatePage(e.view_href)},newPostType(e){this.currentID=!1,this.uipress.updatePage(e.new_href)},setDragAreaClasses(){let e=[];return e.class="uip-flex uip-flex-column uip-row-gap-xxs uip-max-w-100p uip-max-h-400 uip-overflow-auto",e},setBaseFolderClass(){let e=[];return e.class="uip-flex uip-flex-column uip-max-w-100p",e},loadMore(e){e.page+=1,this.getDefaultContent(e)},checkForBlank(e){""==e.search&&(e.page=1,this.getDefaultContent(e,!0))}},template:'\n    \n    <div :id="block.uid" :class="returnClasses()">\n    \n      <div class="uip-padding-s uip-flex uip-flex-middle uip-flex-center" v-if="loading"><loading-chart></loading-chart></div>\n      \n      <div class="uip-flex uip-flex-column uip-max-w-100p" v-else>\n        <template v-for="type in defaults">\n        \n          <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-max-w-100p">\n          \n            <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-default uip-padding-xxs hover:uip-background-muted uip-border-round uip-no-text-select" \n            :class="type.open ? \'uip-background-muted\' : \'\'" @click="type.open = !type.open;getDefaultContent(type, true)">\n              <div class="uip-icon uip-text-l">database</div>\n              <div class="uip-flex-grow">{{type.label}}</div>\n              <div class="uip-text-muted">{{type.count}}</div>\n            </div>\n            \n            <div v-if="type.open" class="uip-max-w-100p uip-scale-in-top-center">\n              \n              \n              <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-max-w-100p uip-padding-xxxs uip-margin-bottom-xs uip-margin-left-s">\n                \n                \x3c!-- Search post types --\x3e\n                <div v-if="type.count > 10" class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-no-text-select uip-max-w-100p">\n                  <div class="uip-w-5 uip-ratio-1-1 uip-position-relative"><div class="uip-icon uip-position-absolute uip-top-50p uip-left-50p uip-translate-all-50p">search</div></div>\n                  <input class="uip-text-s uip-blank-input uip-flex-grow" :placeholder="strings.search" v-model="type.search" @keyup="checkForBlank(type)" v-on:keyup.enter="type.page = 1; getDefaultContent(type, true)">\n                  <div class="uip-icon uip-padding-xxxs uip-text-l uip-text-muted uip-border-round">keyboard_return</div>\n                </div>\n                \n                \x3c!-- new post type --\x3e\n                <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-default uip-border-round uip-no-text-select uip-max-w-100p" @click="newPostType(type)">\n                  <div class="uip-w-5 uip-ratio-1-1 uip-position-relative"><div class="uip-icon uip-position-absolute uip-top-50p uip-left-50p uip-translate-all-50p">add</div></div>\n                  <div class="uip-overflow-hidden uip-text-ellipsis uip-no-wrap uip-flex-grow">{{strings.new}} {{type.name}}</div>\n                </div>\n                \n                <div class="uip-padding-s uip-flex uip-flex-middle uip-flex-center" v-if="type.loading"><loading-chart></loading-chart></div>\n                \n                \x3c!-- Loop through type content --\x3e\n                <uip-draggable v-else \n                v-model="type.content" \n                :component-data="setDragAreaClasses()"\n                :group="{ name: \'post-defaults\', pull: \'clone\', put: false, revertClone: true }"\n                @start="drag = true" \n                @end="drag = false" \n                animation="300"\n                :sort="false"\n                itemKey="id">\n                  <template #item="{element: item, index}">\n                  \n                    <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-border-round uip-no-text-select uip-max-w-100p"\n                    :class="currentID == item.id ? \'uip-cursor-pointer\' : \'uip-link-default\'">\n                      \n                      <div v-if="1==2" class="uip-cursor-pointer uip-background-muted uip-icon uip-border-round uip-block-drag">drag_indicator</div>\n                      \n                      \x3c!-- Post status --\x3e\n                      <div v-if="item.status == \'draft\'" class="uip-w-5 uip-ratio-1-1 uip-border-circle uip-background-orange uip-display-block"></div>\n                      <div v-else-if="item.status == \'publish\' || item.status == \'inherit\'" class="uip-w-5 uip-ratio-1-1 uip-border-circle uip-background-green uip-display-block"></div>\n                      <div v-else class="uip-w-5 uip-ratio-1-1 uip-border-circle uip-background-accent uip-display-block"></div>\n                      \n                      <div class="uip-overflow-hidden uip-text-ellipsis uip-no-wrap uip-flex-grow" @click="updatePage(item)" :class="currentID == item.id ? \'uip-text-accent\' : \'\'">{{item.title}}</div>\n                      \n                      <drop-down dropPos="right">\n                        <template v-slot:trigger>\n                          <div class="uip-icon uip-padding-xxxs uip-text-l hover:uip-background-muted uip-link-muted uip-border-round">more_vert</div>\n                        </template>\n                        <template v-slot:content>\n                          \n                          <div class="uip-flex uip-flex-column uip-w-200 uip-max-w-200">\n                            \n                            <div class="uip-padding-xs uip-border-bottom uip-flex uip-flex-column uip-gap-xs uip-flex-start">\n                              <div class="uip-padding-xxs uip-border-round uip-text-xs uip-background-primary-wash uip-line-height-1">{{item.type}}</div>\n                              <div class="">{{item.title}}</div>\n                            </div>\n                            \n                            <div class="uip-padding-xs uip-border-bottom uip-flex uip-flex-column uip-gap-xxs uip-flex-start">\n                              <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-muted" @click="currentID = item.id;uipress.updatePage(item.view_href)">\n                                <div class="uip-icon uip-text-l">visibility</div>\n                                <div class="">{{strings.view}}</div>\n                              </div>\n                              <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-muted" @click="currentID = item.id;uipress.updatePage(item.edit_href)">\n                                <div class="uip-icon uip-text-l">edit</div>\n                                <div class="">{{strings.edit}}</div>\n                              </div>\n                              <div v-if="item.type != \'attachment\'" class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-muted" @click="duplicateItem(item, index, type.content)">\n                                <div class="uip-icon uip-text-l">content_copy</div>\n                                <div class="">{{strings.duplicate}}</div>\n                              </div>\n                            </div>\n                            \n                            <div v-if="item.canDelete" class="uip-padding-xs uip-border-bottom uip-flex uip-flex-column uip-gap-xxxs uip-flex-start">\n                              <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-danger" @click="deleteItem(item, index, type)">\n                                <div class="uip-icon uip-text-l">delete</div>\n                                <div class="">{{strings.delete}}</div>\n                              </div>\n                            </div>\n                            \n                          </div>\n                          \n                        </template>\n                      </drop-down>\n                      \n                    </div>\n                  \n                  </template>\n                  \n                </uip-draggable>\n                \n                <div v-if="type.content.length < type.totalFound" class="uip-padding-right-xs">\n                  <div class="uip-text-s uip-link-muted uip-border-round uip-padding-xxs uip-padding-left-remove uip-display-inline-flex" @click="loadMore(type)">{{strings.loadMore}}</div>\n                </div>\n                  \n              </div>\n              \n            </div>\n          \n          </div>\n          \n        </template>\n        \n        \x3c!-- End base folders --\x3e\n        \n        \x3c!-- User folders --\x3e\n        \n        <div class="uip-text-muted uip-padding-xxs uip-margin-bottom-xxxs uip-margin-top-xxs">{{strings.folders}}</div>\n        \n        \x3c!-- Loop through top level folders --\x3e\n        <div class="uip-max-w-100p">\n        \n          <uip-draggable \n          v-model="baseFolders" \n          :component-data="setBaseFolderClass()"\n          :group="{ name: \'user-folders\', pull: true, put: true }"\n          @start="drag = true" \n          @end="drag = false" \n          @change="itemAdded"\n          animation="300"\n          :sort="false"\n          itemKey="id">\n          \n            <template #item="{element: folder, index}">\n            \n              <content-folder :folder="folder" :removeSelf="function(){baseFolders.splice(index, 1)}" :currentID="currentID" :updateID="function(d){currentID = d}"></content-folder>\n            \n            </template>\n            \n            \x3c!--FOOTER--\x3e\n            <template #footer >\n              <new-folder :list="baseFolders" parent="uipfalse"></new-folder>\n            </template>\n          \n          </uip-draggable>\n        \n        </div>\n        \n      </div>\n      \n    </div>\n    \n    \n    \n    '}};let newFolder={props:{parent:[String,Number],list:Array,incrementCount:Function},data:function(){return{newFolder:{name:"",color:"rgb(108, 76, 203)"},strings:{newFolder:__("New folder","uipress-pro"),folderName:__("Folder name","uipress-pro"),folderColor:__("Folder colour","uipress-pro"),create:__("Create","uipress-pro")}}},watch:{},inject:["uipress"],methods:{createNewFolder(){let e=this;if(""==e.newFolder.name)return void e.uipress.notify(__("Folder name can not be blank","uipress-pro"),"","error",!0);let i=new FormData;i.append("action","uip_create_folder"),i.append("security",uip_ajax.security),i.append("folderParent",e.parent),i.append("folderName",e.newFolder.name),i.append("folderColor",e.newFolder.color),e.uipress.callServer(uip_ajax.ajax_url,i).then(i=>{i.error&&e.uipress.notify(i.message,"","error",!0),i.success&&(void 0!==e.incrementCount&&e.incrementCount(1),e.uipress.notify(__("Folder created","uipress-pro"),"","success",!0),e.uipress.isObject(i.folder)&&e.list.push(i.folder))})}},template:'\n    <drop-down dropPos="right">\n      <template v-slot:trigger>\n        <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-muted uip-border-round uip-no-text-select uip-max-w-100p uip-padding-xxs uip-padding-top-xxxs uip-padding-bottom-xxxs">\n          <div class="uip-icon uip-text-l">add</div>\n          <div class="uip-overflow-hidden uip-text-ellipsis uip-no-wrap uip-flex-grow">{{strings.newFolder}}</div>\n        </div>\n      </template>\n      <template v-slot:content>\n        <div class="uip-padding-s uip-flex uip-flex-column uip-row-gap-xxs">\n          <div class="uip-text-muted">{{strings.folderName}}</div>\n          <input type="text" v-model="newFolder.name" class="uip-text-s uip-input-small">\n          \n          <div class="uip-text-muted uip-margin-top-xs">{{strings.folderColor}}</div>\n          <div class="uip-background-muted uip-border-round uip-overflow-hidden uip-padding-xxs">\n            <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center">\n              <color-picker :value="newFolder.color" :returnData="function(data){ newFolder.color = data}">\n                <template v-slot:trigger>\n                  <div class="uip-border-round uip-w-18 uip-ratio-1-1 uip-border" :style="\'background-color:\' + newFolder.color"></div>\n                </template>\n              </color-picker>\n              <input v-model="newFolder.color" type="text" class="uip-blank-input uip-text-s" style="line-height: 1.2em !important">\n            </div>\n          </div>\n          \n          <button class="uip-button-primary uip-text-s uip-margin-top-s" @click="createNewFolder()">{{strings.create}}</button>\n        </div>\n      </template>\n    </drop-down>\n    '},contentFolder={name:"content-folder",components:{"uip-draggable":vuedraggable,"new-folder":newFolder},props:{folder:Object,removeSelf:Function,currentID:[Number,String,Boolean],updateID:Function},data:function(){return{loading:!1,defaults:[],newFolder:{name:"",color:"rgb(108, 76, 203)"},strings:{placeholder:__("Input placeholder...","uipress-pro"),new:__("New","uipress-pro"),loadMore:__("Load more","uipress-pro"),search:__("Search","uipress-pro"),view:__("View","uipress-pro"),edit:__("Edit","uipress-pro"),delete:__("Delete","uipress-pro"),folders:__("Folders","uipress-pro"),duplicate:__("Duplicate","uipress-pro"),folderName:__("Folder name","uipress-pro"),folderColor:__("Folder colour","uipress-pro"),update:__("Update","uipress-pro"),edit:__("Edit","uipress-pro")}}},watch:{},inject:["uipress","limitToauthor","defaultLinkType","postTypes"],mounted:function(){},computed:{},methods:{getFolderContent(e){let i=this;if(!i.folder.open)return;"page"in i.folder||(i.folder.page=1),e&&(i.folder.loading=!0);let t=new FormData;t.append("action","uip_get_folder_content"),t.append("security",uip_ajax.security),t.append("limitToauthor",i.limitToauthor),t.append("postTypes",JSON.stringify(i.postTypes)),t.append("page",i.folder.page),t.append("search",i.folder.search),t.append("id",i.folder.id),i.uipress.callServer(uip_ajax.ajax_url,t).then(e=>{i.folder.loading=!1,e.error&&i.uipress.notify(e.message,"","error",!0),e.success&&(i.folder.totalFound=e.totalFound,i.folder.page>1?i.folder.content=i.folder.content.concat(e.content):i.folder.content=e.content)})},updateItemFolder(e){let i=this,t=new FormData;t.append("action","uip_update_item_folder"),t.append("security",uip_ajax.security),t.append("item",JSON.stringify(e)),t.append("newParent",i.folder.id),i.uipress.callServer(uip_ajax.ajax_url,t).then(t=>{i.folder.loading=!1,t.error&&i.uipress.notify(t.message,"","error",!0),t.success&&(e.parent=i.folder.id)})},deleteFolder(){let e=this,i=new FormData;i.append("action","uip_delete_folder"),i.append("security",uip_ajax.security),i.append("postTypes",JSON.stringify(e.postTypes)),i.append("folderId",e.folder.id),e.uipress.callServer(uip_ajax.ajax_url,i).then(i=>{e.folder.loading=!1,i.error&&e.uipress.notify(i.message,"","error",!0),i.success&&(e.removeSelf(),e.uipress.notify(__("Folder deleted","uipress-pro"),"","sucess",!0))})},updateFolder(){let e=this,i=new FormData;i.append("action","uip_update_folder"),i.append("security",uip_ajax.security),i.append("folderId",e.folder.id),i.append("title",e.folder.title),i.append("color",e.folder.color),e.uipress.callServer(uip_ajax.ajax_url,i).then(i=>{i.error&&e.uipress.notify(i.message,"","error",!0),i.success&&(e.uipress.notify(__("Folder updated","uipress-pro"),"","sucess",!0),e.folder.showEdit=!1)})},duplicateItem(e,i){let t=this,n=new FormData;n.append("action","uip_duplicate_post"),n.append("security",uip_ajax.security),n.append("postID",e.id),t.uipress.callServer(uip_ajax.ajax_url,n).then(n=>{if(n.error&&t.uipress.notify(n.message,"","error",!0),n.success){t.uipress.notify(__("Item duplicated","uipress-pro"),"","sucess",!0);let p=JSON.parse(JSON.stringify(e));p.id=n.newID,p.title=n.newTitle,p.draft="draft",t.folder.content.splice(i,0,p)}})},deleteItem(e,i){let t=this,n=new FormData;n.append("action","uip_delete_post_from_folder"),n.append("security",uip_ajax.security),n.append("postID",e.id),t.uipress.callServer(uip_ajax.ajax_url,n).then(e=>{e.error&&t.uipress.notify(e.message,"","error",!0),e.success&&(t.uipress.notify(__("Item deleted","uipress-pro"),"","sucess",!0),t.folder.content.splice(i,1),t.folder.totalFound-=1,t.folder.count-=1)})},itemAdded(e){let i=this;if(e.added){if(this.folder.content.filter(i=>i.id===e.added.element.id).length>1)return void this.folder.content.splice(e.added.newIndex,1);this.folder.content.sort(function(e,i){let t=e.title.toUpperCase(),n=i.title.toUpperCase();return t<n?-1:t>n?1:0}),i.folder.count+=1,i.updateItemFolder(e.added.element)}e.removed&&(i.folder.count-=1,i.folder.totalFound-=1)},updatePage(e){this.updateID(e.id),"editPost"==this.defaultLinkType?this.uipress.updatePage(e.edit_href):this.uipress.updatePage(e.view_href)},setDragAreaClasses(){let e=[];return e.class="uip-flex uip-flex-column uip-row-gap-xxs uip-max-w-100p uip-max-h-600 uip-overflow-auto",e},setBaseFolderClass(){let e=[];return e.class="uip-flex uip-flex-column uip-max-w-100p uip-max-h-600 uip-overflow-auto",e},loadMore(e){e.page+=1,this.getFolderContent()},checkForBlank(e){""==e.search&&(e.page=1,this.getFolderContent(!0))}},template:'\n    \n    <div :data-id="folder.id">\n  \n  \n      \x3c!-- top folder --\x3e\n      <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-max-w-100p">\n      \n        <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-default uip-padding-xxs uip-padding-top-xxxs uip-padding-bottom-xxxs hover:uip-background-muted uip-border-round uip-no-text-select" \n        :class="folder.open ? \'uip-background-muted\' : \'\'">\n          <div class="uip-icon uip-text-l" v-if="!folder.open" :style="\'color:\' + folder.color" @click="folder.open = !folder.open;getFolderContent(true)">folder</div>\n          <div class="uip-icon uip-text-l" v-if="folder.open" :style="\'color:\' + folder.color" @click="folder.open = !folder.open;getFolderContent(true)">folder_open</div>\n          <div class="uip-flex-grow" @click="folder.open = !folder.open;getFolderContent(true)">{{folder.title}}</div>\n          <div class="uip-text-muted">{{folder.count}}</div>\n          <drop-down dropPos="right">\n            <template v-slot:trigger>\n              <div class="uip-icon uip-padding-xxxs uip-text-l hover:uip-background-muted uip-link-muted uip-border-round">more_vert</div>\n            </template>\n            <template v-slot:content>\n              \n              <div class="uip-flex uip-flex-column uip-w-200 uip-max-w-200">\n              \n                \n                \x3c!-- Update folders --\x3e\n                <div class="uip-padding-xs uip-border-bottom uip-flex uip-flex-column uip-gap-xxs" v-if="folder.showEdit">\n                \n                  <div class="uip-text-muted">{{strings.folderName}}</div>\n                  <input type="text" v-model="folder.title" class="uip-text-s uip-input-small">\n                  \n                  <div class="uip-text-muted uip-margin-top-xs">{{strings.folderColor}}</div>\n                  <div class="uip-background-muted uip-border-round uip-overflow-hidden uip-padding-xxs">\n                    <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center">\n                      <color-picker :value="folder.color" :returnData="function(data){ folder.color = data}">\n                        <template v-slot:trigger>\n                          <div class="uip-border-round uip-w-18 uip-ratio-1-1 uip-border" :style="\'background-color:\' + folder.color"></div>\n                        </template>\n                      </color-picker>\n                      <input v-model="folder.color" type="text" class="uip-blank-input uip-text-s" style="line-height: 1.2em !important">\n                    </div>\n                  </div>\n                  \n                  <button class="uip-button-primary uip-text-s uip-margin-top-s" @click="updateFolder()">{{strings.update}}</button>\n                \n                </div>\n                \n                <div class="uip-padding-xs uip-border-bottom uip-flex uip-flex-column uip-gap-xxs uip-flex-start">\n                  <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-muted" @click="folder.showEdit = !folder.showEdit">\n                    <div class="uip-icon uip-text-l">edit</div>\n                    <div class="">{{strings.edit}}</div>\n                  </div>\n                </div>\n                \n                <div v-if="folder.canDelete"  class="uip-padding-xs uip-border-bottom uip-flex uip-flex-column uip-gap-xxxs uip-flex-start">\n                  <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-danger" @click="deleteFolder()">\n                    <div class="uip-icon uip-text-l">delete</div>\n                    <div class="">{{strings.delete}}</div>\n                  </div>\n                </div>\n                \n              </div>\n              \n            </template>\n          </drop-down>\n        </div>\n        \n      </div> \n      \n      \x3c!-- Folder contents --\x3e\n      \n      <div v-if="folder.open" class="uip-max-w-100p uip-scale-in-top-center">\n        \n        <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-max-w-100p uip-padding-xxxs uip-margin-bottom-xs uip-margin-left-xs uip-padding-left-xs uip-padding-bottom-remove uip-before-border">\n          \n          \n          <div class="uip-padding-s uip-flex uip-flex-middle uip-flex-center" v-if="folder.loading"><loading-chart></loading-chart></div>\n          \n          \x3c!-- Loop through type content --\x3e\n          <uip-draggable v-else \n          v-model="folder.content" \n          :component-data="setBaseFolderClass()"\n          :group="{ name: \'post-defaults\', pull: true, put: true, revertClone: true }"\n          @start="drag = true" \n          @end="drag = false" \n          @change="itemAdded"\n          animation="300"\n          :sort="false"\n          itemKey="id">\n          \n          \n            \x3c!--FOOTER--\x3e\n            <template #header >\n            \n              \x3c!-- Search post types --\x3e\n              <div v-if="folder.count > 10" class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-text-muted uip-padding-xxs uip-padding-top-xxxs uip-padding-bottom-xxxs">\n                <div class="uip-icon uip-text-l">search</div>\n                <input class="uip-text-s uip-blank-input uip-flex-grow" :placeholder="strings.search" v-model="folder.search" @keyup="checkForBlank(folder)" v-on:keyup.enter="folder.page = 1; getFolderContent( true)">\n                <div class="uip-icon uip-padding-xxxs uip-text-l uip-text-muted">keyboard_return</div>\n              </div>\n              \n              <new-folder :list="folder.content" :incrementCount="function(e){folder.count += e}" :parent="folder.id"></new-folder>\n            \n            </template>\n            \n            \n            <template #item="{element: item, index}">\n            \n              <content-folder v-if="item.type == \'uip-ui-folder\'" :folder="item" :removeSelf="function(){folder.content.splice(index, 1)}" :currentID="currentID" :updateID="updateID"></content-folder>\n            \n              <div v-else class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-border-round uip-no-text-select uip-max-w-100p uip-padding-left-xxs uip-padding-right-xxs"\n              :class="currentID == item.id ? \'uip-cursor-pointer\' : \'uip-link-default\'">\n                \n                \n                \x3c!-- Post status --\x3e\n                <div class="uip-flex uip-flex-center uip-flex-middle uip-w-16">\n                  <div v-if="item.status == \'draft\'" class="uip-w-5 uip-ratio-1-1 uip-border-circle uip-background-orange uip-display-block"></div>\n                  <div v-else-if="item.status == \'publish\' || item.status == \'inherit\'" class="uip-w-5 uip-ratio-1-1 uip-border-circle uip-background-green uip-display-block"></div>\n                  <div v-else class="uip-w-5 uip-ratio-1-1 uip-border-circle uip-background-accent uip-display-block"></div>\n                </div>\n                \n                <div class="uip-overflow-hidden uip-text-ellipsis uip-no-wrap uip-flex-grow" @click="updatePage(item)" :class="currentID == item.id ? \'uip-text-accent\' : \'\'">{{item.title}}</div>\n                \n                <drop-down dropPos="right">\n                  <template v-slot:trigger>\n                    <div class="uip-icon uip-padding-xxxs uip-text-l hover:uip-background-muted uip-link-muted uip-border-round">more_vert</div>\n                  </template>\n                  <template v-slot:content>\n                    \n                    <div class="uip-flex uip-flex-column uip-w-200 uip-max-w-200">\n                      \n                      <div class="uip-padding-xs uip-border-bottom uip-flex uip-flex-column uip-gap-xs uip-flex-start">\n                        <div class="uip-padding-xxs uip-border-round uip-text-xs uip-background-primary-wash uip-line-height-1">{{item.type}}</div>\n                        <div class="">{{item.title}}</div>\n                      </div>\n                      \n                      <div class="uip-padding-xs uip-border-bottom uip-flex uip-flex-column uip-gap-xxs uip-flex-start">\n                        <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-muted" @click="updateID(item.id);uipress.updatePage(item.view_href)">\n                          <div class="uip-icon uip-text-l">visibility</div>\n                          <div class="">{{strings.view}}</div>\n                        </div>\n                        <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-muted" @click="updateID(item.id);uipress.updatePage(item.edit_href)">\n                          <div class="uip-icon uip-text-l">edit</div>\n                          <div class="">{{strings.edit}}</div>\n                        </div>\n                        <div v-if="item.type != \'attachment\'" class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-muted" @click="duplicateItem(item, index)">\n                          <div class="uip-icon uip-text-l">content_copy</div>\n                          <div class="">{{strings.duplicate}}</div>\n                        </div>\n                      </div>\n                      \n                      <div v-if="item.canDelete" class="uip-padding-xs uip-border-bottom uip-flex uip-flex-column uip-gap-xxxs uip-flex-start">\n                        <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-link-danger" @click="deleteItem(item, index)">\n                          <div class="uip-icon uip-text-l">delete</div>\n                          <div class="">{{strings.delete}}</div>\n                        </div>\n                      </div>\n                      \n                    </div>\n                    \n                  </template>\n                </drop-down>\n                \n              </div>\n            \n            </template>\n            \n            \x3c!--FOOTER--\x3e\n            <template #footer >\n            \n              <div v-if="folder.content.length > 1 && folder.content.length < folder.totalFound" class="uip-padding-right-xs">\n                <div class="uip-text-s uip-link-muted uip-border-round uip-padding-xxs uip-padding-left-remove uip-display-inline-flex" @click="loadMore(folder)">{{strings.loadMore}}</div>\n              </div>\n              \n            </template>\n            \n            \n            \n          </uip-draggable>\n            \n        </div>\n        \n      </div>\n      \x3c!--End folder contents --\x3e\n      \n    </div>\n    \n    \n    \n    '};