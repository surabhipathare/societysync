const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{},data:function(){return{loading:!0,allRoles:[],allCaps:{},activeCapGroup:"all",toggleState:!0,strings:{roleEditor:__("Role editor","uipress-pro"),searchRoles:__("Search roles","uipress-pro"),permissions:__("Permissions","uipress-pro"),users:__("Users","uipress-pro"),others:__("others","uipress-pro"),noUsers:__("No users with this role","uipress-pro"),label:__("Label","uipress-pro"),capabilities:__("Capabilities","uipress-pro"),duplicate:__("Duplicate","uipress-pro"),delete:__("Delete","uipress-pro"),save:__("Save","uipress-pro"),adminWarning:__("You are currently editing the administrator role. This is usually the most important role on the site so please make sure not to remove nessecary capabilities.","uipress-pro"),areYouSure:__("Are you sure?","uipress-pro"),confirmDelete:__("Please double check the role you are deleting and ensure you no longer require it","uipress-pro"),yesDeleteRole:__("Yes, delete role","uipress-pro"),newRole:__("New role","uipress-pro"),roleName:__("Role name","uipress-pro"),roleLabel:__("Role label","uipress-pro"),createRole:__("Create role","uipress-pro"),cloneRole:__("Clone role","uipress-pro"),toggleAll:__("Toggle all","uipress-pro"),newCapability:__("New capability","uipress-pro"),createCap:__("Create capability","uipress-pro"),capName:__("Capability name","uipress-pro")},filters:{search:""},newRole:{name:"",label:""},newCap:{name:""}}},inject:["uipData","uipress"],watch:{filters:{handler(e,i){this.getRoles()},deep:!0},"newRole.name":{handler(e,i){if(e&&e.length>0){let i=e;i=(i=i.replace(" ","-")).toLowerCase(),this.newRole.name=i}},deep:!0},"newCap.name":{handler(e,i){if(e&&e.length>0){let i=e;i=(i=(i=i.replace(" ","_")).replace("-","_")).toLowerCase(),this.newCap.name=i}},deep:!0}},mounted:function(){this.getRoles()},computed:{returnAllCaps(){return"all"in this.allCaps?this.allCaps.all.caps.length:0}},methods:{getRoles(){let e=this,i=JSON.stringify(e.filters),s=new FormData;s.append("action","uip_get_all_roles"),s.append("security",uip_ajax.security),s.append("filters",i),e.uipress.callServer(uip_ajax.ajax_url,s).then(i=>{e.loading=!1,i.error&&(e.uipress.notify(i.message,"","error",!0,!1),e.loading=!1),i.success&&(e.allRoles=i.roles)})},openRole(e){let i=this;e.open?e.open=!1:"all"in i.allCaps?e.open=!0:i.getAllCaps(e)},getAllCaps(e){let i=this,s=new FormData;s.append("action","uip_get_all_capabilities"),s.append("security",uip_ajax.security),i.uipress.callServer(uip_ajax.ajax_url,s).then(s=>{i.loading=!1,s.error&&i.uipress.notify(s.message,"","error",!0,!1),s.success&&(i.allCaps=s.caps,e&&(e.open=!0))})},returnAllSelectedCapsCount(e){let i=0;for(let s in e.caps)e.caps[s]&&(i+=1);return i},updateRole(e){let i=this,s=JSON.stringify(e),n=new FormData;n.append("action","uip_update_role"),n.append("security",uip_ajax.security),n.append("role",s),i.uipress.callServer(uip_ajax.ajax_url,n).then(e=>{e.error&&i.uipress.notify(e.message,"","error",!0,!1),e.success&&i.uipress.notify(e.message,"","success",!0,!1)})},deleteRole(e,i){let s=this,n=JSON.stringify(e),p=new FormData;p.append("action","uip_delete_role"),p.append("security",uip_ajax.security),p.append("role",n),s.uipress.callServer(uip_ajax.ajax_url,p).then(e=>{e.error&&s.uipress.notify(e.message,"","error",!0,!1),e.success&&(s.uipress.notify(e.message,"","success",!0,!1),s.allRoles.splice(i,1))})},createRole(e){let i=this;if(""==i.newRole.name)return void i.uipress.notify(__("Role name can not be emtpty","uipress-pro"),"","error",!0,!1);if(""==i.newRole.label)return void i.uipress.notify(__("Role label can not be emtpty","uipress-pro"),"","error",!0,!1);let s=JSON.stringify(i.newRole),n=JSON.stringify({});e&&(n=JSON.stringify(e.caps));let p=new FormData;p.append("action","uip_create_role"),p.append("security",uip_ajax.security),p.append("role",s),p.append("caps",n),i.uipress.callServer(uip_ajax.ajax_url,p).then(e=>{e.error&&i.uipress.notify(e.message,"","error",!0,!1),e.success&&(i.uipress.notify(e.message,"","success",!0,!1),this.getRoles(),i.newRole.name="",i.newRole.label="")})},toggleAllCaps(e){for(let i of this.allCaps.all.caps)e.caps[i]=this.toggleState;this.toggleState=!this.toggleState},removeCap(e,i){let s=this,n=new FormData;n.append("action","uip_delete_cap"),n.append("security",uip_ajax.security),n.append("rolename",e.name),n.append("rolelabel",e.label),n.append("cap",i),s.uipress.callServer(uip_ajax.ajax_url,n).then(e=>{e.error&&s.uipress.notify(e.message,"","error",!0,!1),e.success&&(s.uipress.notify(e.message,"","success",!0,!1),s.getAllCaps(!1))})},createCap(e){let i=this;if(""==i.newCap.name)return void i.uipress.notify(__("Capability name can not be emtpty","uipress-pro"),"","error",!0,!1);let s=i.newCap.name,n=new FormData;n.append("action","uip_create_cap"),n.append("security",uip_ajax.security),n.append("rolename",e.name),n.append("rolelabel",e.label),n.append("cap",s),i.uipress.callServer(uip_ajax.ajax_url,n).then(e=>{e.error&&i.uipress.notify(e.message,"","error",!0,!1),e.success&&(i.uipress.notify(e.message,"","success",!0,!1),i.newCap.name="",i.getAllCaps(!1))})}},template:'\n      <div class="uip-flex uip-flex-column uip-row-gap-xs">\n      \n      \n        \x3c!-- Roles title --\x3e\n        <div class="uip-flex uip-cursor-pointer uip-margin-bottom-xs uip-background-muted uip-border-rounded uip-padding-xs uip-border-round uip-text-bold uip-text-emphasis">\n          {{strings.roleEditor}}\n        </div>\n        \n        \n        \x3c!-- Search roles --\x3e\n        <div class="uip-padding-xs uip-flex-grow uip-flex uip-flex uip-gap-xxs">\n          <div class="uip-flex uip-flex-center uip-flex-grow">\n            <span class="uip-icon uip-text-muted uip-margin-right-xs uip-text-l uip-icon-medium">search</span>\n            <input class="uip-blank-input uip-flex-grow uip-text-s" type="search" :placeholder="strings.searchRoles" v-model="filters.search" autofocus="">\n          </div>\n          \n          <drop-down dropPos="bottom-right">\n            <template v-slot:trigger>\n              <button class="uip-button-default uip-flex uip-gap-xxs">\n                <span class="uip-icon">add</span>\n                <span class="uip-text-s">{{strings.newRole}}</span>\n              </button>\n            </template>\n            <template v-slot:content>\n              <div class="uip-flex uip-flex-column uip-row-gap-xs uip-padding-xs">\n                <div class="">\n                  <div class="uip-margin-bottom-xxs uip-text-muted">{{strings.roleName}}</div>\n                  <input class="uip-input-small uip-w-100p" type="text" v-model="newRole.name">\n                </div>\n                \n                <div class="">\n                  <div class="uip-margin-bottom-xxs uip-text-muted">{{strings.roleLabel}}</div>\n                  <input class="uip-input-small uip-w-100p" type="text" v-model="newRole.label">\n                </div>\n                \n                <button class="uip-button-primary" @click="createRole()">{{strings.createRole}}</button>\n              </div>\n            </template>\n          </drop-down>\n        </div>\n        \n        <div v-if="loading" class="uip-flex uip-flex-center uip-flex-middle uip-padding-m"><loading-chart></loading-chart></div>\n        \x3c!-- Roles list --\x3e\n        <div v-else class="uip-flex uip-flex-column uip-row-gap-xxxs">\n          \n          <template v-for="(role, index) in allRoles">\n            \n            <div>\n              \x3c!-- Role overview --\x3e\n              <div class="uip-flex uip-flex-row uip-flex-between uip-gap-xxs uip-padding-xs uip-border-round hover:uip-background-muted uip-cursor-pointer" @click="openRole(role)" :class="role.open ? \'uip-background-muted\' : \'\'">\n                \n                <div class="uip-flex uip-flex-column uip-flex-no-wrap uip-flex-grow uip-row-gap-xxs">\n                  <div class="uip-flex uip-gap-xxs uip-flex-center">\n                    <span class="uip-text-m uip-text-bold">{{role.label}}</span>                    <span class="uip-text-muted">({{role.name}})</span>\n                  </div>\n                  <div class="uip-flex uip-gap-xxs uip-flex-center">\n                    \n                    \n                    \n                    <div v-if="role.users.length > 0" class="uip-flex uip-flex-reverse uip-margin-left-xxs">\n                      <template v-for="(user,index) in role.users">\n                        <div class="uip-w-20 uip-ratio-1-1 uip-text-s uip-background-primary-wash uip-border-circle uip-border-match uip-text-capitalize \n                        uip-text-center uip-line-height-1 uip-text-center uip-flex uip-flex-center uip-flex-middle uip-margin-left--8">\n                          <uip-tooltip :message="user" :delay="50">\n                            <span>{{user[0]}}</span>\n                          </uip-tooltip>\n                        </div>\n                      </template>\n                    </div>\n                    \n                    <div v-if="role.usersCount > role.users.length" class="uip-text-muted uip-text-s">+{{role.usersCount - role.users.length}} {{strings.others}}</div>\n                    \n                    <div v-else-if="role.users.length == 0" class="uip-text-muted uip-text-s">{{strings.noUsers}}</div>\n                    \n                    \n                  </div>\n                </div>\n                \n                <div class="">\n                  \n                </div>\n                \n              </div>\n              \n              \x3c!-- Role editor--\x3e\n              \n              <div v-if="role.open" class="uip-padding-xs uip-scale-in-top uip-margin-bottom-m  uip-margin-top-s uip-flex uip-flex-column uip-flex-no-wrap uip-row-gap-m">\n                \n\n                <div class="uip-grid-col-2">\n                  <div class="">\n                    <div class="uip-margin-bottom-xxs uip-text-muted">{{strings.label}}</div>\n                    <input class="uip-input-small uip-w-100p" type="text" v-model="role.label">\n                  </div>\n                \n                </div>\n                \n                <div v-if="role.name == \'administrator\'" class="uip-background-orange-wash uip-padding-xs uip-border-round">\n                  {{strings.adminWarning}}\n                </div>\n                \n                \n                \n                <div class="uip-flex uip-cursor-pointer uip-text-s uip-background-muted uip-border-rounded uip-padding-xs uip-border-round uip-text-emphasis uip-flex uip-flex-between">\n                  <span>{{strings.capabilities}}</span>\n                  <span class="uip-text-muted">{{returnAllSelectedCapsCount(role)}} / {{returnAllCaps}} granted</span>\n                </div>\n                \n                \x3c!-- Capability editor --\x3e\n                <div class="">\n                \n                  <div class="uip-flex uip-flex-row uip-flex-no-wrap uip-gap-xs">\n                  \n                    \x3c!-- Categories --\x3e\n                    <div class="uip-flex uip-flex-column uip-w-125 uip-row-gap-xxs">\n                      <template v-for="capCat in allCaps">\n                        <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center uip-padding-xxxs uip-border-round uip-link-muted hover:uip-background-muted" \n                        :class="activeCapGroup == capCat.shortname ? \'uip-text-normal uip-text-bold\' : \'\'" @click="activeCapGroup = capCat.shortname">\n                          <span class="uip-icon">{{capCat.icon}}</span>\n                          <span class="uip-line-height-1">{{capCat.name}}</span>\n                        </div>\n                      </template>\n                      \n                      <div class=" uip-margin-top-xs uip-margin-bottom-xs"></div>\n                      \n                      <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center uip-padding-xxxs uip-border-round uip-link-muted" \n                      @click="toggleAllCaps(role)">\n                        <span class="uip-icon">indeterminate_check_box</span>\n                        <span class="uip-line-height-1">{{strings.toggleAll}}</span>\n                      </div>\n                      <drop-down dropPos="bottom-left">\n                        <template v-slot:trigger>\n                          <div class="uip-flex uip-flex-row uip-gap-xxs uip-flex-center uip-padding-xxxs uip-border-round uip-link-muted">\n                            <span class="uip-icon">add</span>\n                            <span class="uip-line-height-1">{{strings.newCapability}}</span>\n                          </div>\n                        </template>\n                        <template v-slot:content>\n                            <div class="uip-flex uip-flex-column uip-row-gap-xs uip-padding-xs">\n                              \n                              <div class="">\n                                <div class="uip-margin-bottom-xxs uip-text-muted">{{strings.capName}}</div>\n                                <input class="uip-input-small uip-w-100p" type="text" v-model="newCap.name">\n                              </div>\n                              \n                              <button class="uip-button-primary" @click="createCap(role)">{{strings.createCap}}</button>\n                            </div>\n                        </template>\n                      </drop-down>\n                    </div>\n                    \n                    \x3c!-- Caps --\x3e\n                    <div class="uip-flex-grow uip-flex uip-flex-column uip-gap-xxs uip-flex-no-wrap uip-max-h-300 uip-overflow-auto uip-padding-right-xs">\n                      <template v-for="cap in allCaps[activeCapGroup].caps">\n                        \n                        <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-center uip-padding-xxs uip-border-round uip-cursor-pointer"\n                        :class="role.caps[cap] ? \'uip-background-muted\' : \'\'">                          <div v-if="role.caps[cap]" class="uip-icon uip-text-accent" @click="role.caps[cap] = !role.caps[cap]">radio_button_checked</div>\n                          <div v-if="!role.caps[cap]" class="uip-icon" @click="role.caps[cap] = !role.caps[cap]">radio_button_unchecked</div>\n                          <div class="uip-flex-grow uip-line-height-1 uip-text-s" @click="role.caps[cap] = !role.caps[cap]">{{cap}}</div>\n                          <div class="uip-icon uip-link-danger" @click="removeCap(role, cap)">delete</div>\n                        </div>\n                        \n                      </template>\n                    </div>\n                    \n                  </div>\n                  \n                </div>\n                \x3c!-- End capabaility editor --\x3e\n                \n                <div class="uip-flex uip-flex-row uip-gap-xs">\n                  \n                  <drop-down dropPos="bottom-left">\n                    <template v-slot:trigger>\n                      <button class="uip-button-danger uip-flex uip-gap-xxs uip-flex-center">\n                        <span class="uip-icon">delete</span>\n                        <span>{{strings.delete}}</span>\n                      </button>\n                    </template>\n                    <template v-slot:content>\n                      <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xs uip-flex-start uip-max-w-260">\n                        <div class="uip-text-emphasis">{{strings.areYouSure}}</div>\n                        <div class="uip-text-muted">{{strings.confirmDelete}}</div>\n                        \n                        <button class="uip-button-danger uip-flex uip-gap-xxs uip-flex-center" @click="deleteRole(role, index)">\n                          <span>{{strings.yesDeleteRole}}</span>\n                        </button>\n                      </div>\n                    </template>\n                  </drop-down>\n                \n                  \n                  <drop-down dropPos="bottom-right">\n                    <template v-slot:trigger>\n                      <button class="uip-button-default uip-flex uip-gap-xxs">\n                        <span class="uip-icon">content_copy</span>\n                        <span class="">{{strings.cloneRole}}</span>\n                      </button>\n                    </template>\n                    <template v-slot:content>\n                      <div class="uip-flex uip-flex-column uip-row-gap-xs uip-padding-xs">\n                        <div class="">\n                          <div class="uip-margin-bottom-xxs uip-text-muted">{{strings.roleName}}</div>\n                          <input class="uip-input-small uip-w-100p" type="text" v-model="newRole.name">\n                        </div>\n                        \n                        <div class="">\n                          <div class="uip-margin-bottom-xxs uip-text-muted">{{strings.roleLabel}}</div>\n                          <input class="uip-input-small uip-w-100p" type="text" v-model="newRole.label">\n                        </div>\n                        \n                        <button class="uip-button-primary" @click="createRole(role)">{{strings.cloneRole}}</button>\n                      </div>\n                    </template>\n                  </drop-down>\n                  \n                  <div class="uip-flex-grow uip-flex uip-flex-right">\n                  \n                    <button class="uip-button-primary uip-flex uip-gap-xxs uip-flex-center uip-flex-right" @click="updateRole(role)">\n                      <span class="uip-icon">save</span>\n                      <span>{{strings.save}}</span>\n                    </button>\n                  \n                  </div>\n                \n                </div>\n                \n                \n              </div>\n              \n            </div>\n          \n          </template>\n        </div>\n        \n      </div>'}};